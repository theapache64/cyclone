plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
}

group 'com.theapache64.cyclone'
version 'v1.0.0-beta01'

repositories {
    mavenCentral()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "shifarshifz"
            name "shifarshifz"
            email "theapache64@gmail.com"
        }
    }

    scm {
        url "https://github.com/theapache64/cyclone"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'com.theapache64'
            artifactId 'cyclone'
            version "$versions.cyclone_version"
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Android APIs in JVM')
                root.appendNode('name', 'cyclone')
                root.appendNode('url', 'https://github.com/theapache64/cyclone')
                root.children().last() + pomConfig
            }
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // Kotlinx Coroutines Core:Coroutines support libraries for Kotlin
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.6'

    // Retrofit:Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.8.1'

    // Moshi Kotlin:Moshi Kotlin
    implementation 'com.squareup.moshi:moshi-kotlin:1.9.2'

    // JSON In Java:JSON is a light-weight, language independent, data interchange format.
    implementation 'org.json:json:20190722'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['mavenPublication']

    pkg {
        repo = 'maven'
        name = 'cyclone'
        userOrg = 'shifarshifz'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/theapache64/cyclone.git'
        version {
            name = versions.cyclone_version
            desc = versions.cyclone_version
            released = new Date()
        }
    }

}